mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count= n()) %>%
arrange(desc(Payment_Type_Count))
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])
runApp('R_UG_Demo/Cab_Explorer')
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
)
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc)
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count= n())
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count = n())
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count = n()) %>%
arrange(desc(Payment_Type_Count))
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count = n()) %>%
arrange(desc(Payment_Type_Count)) %>% show_query()
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count = n()) %>%
arrange(desc(Payment_Type_Count))
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count = n()) %>%
arrange(desc(Payment_Type_Count))
runApp()
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
browser()
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc)
browser()
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc)
browser()
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc)
browser()
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc)
browser()
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc)
browser()
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Payment_Type_Count = n())
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Trip_Count= n())
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
enddate  <- input$enddate+1
trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(payment_type_desc =
case_when(payment_type == 1 ~ "Credit Card",payment_type == 2 ~ "Cash"
,payment_type == 3 ~ "No Charge",payment_type == 4 ~ "Dispute"
,payment_type == 5 ~ "Unkown",payment_type == 6 ~ "Voided",
TRUE ~ as.character(payment_type))
) %>%
group_by(payment_type_desc) %>%
summarise(Trip_Count= n()) %>%
arrange(desc(Payment_Type_Count))
runApp('R_UG_Demo/Cab_Explorer')
gc()
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
shiny::runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
library(shiny)
library(DBI)
library(odbc)
#library(data.table,warn.conflicts = FALSE)
library(shinydashboard)
library(ggplot2)
library(pool)
library(dbplyr)
library(dplyr)
library(shiny)
library(DBI)
library(odbc)
#library(data.table,warn.conflicts = FALSE)
library(shinydashboard)
library(ggplot2)
library(pool)
library(dbplyr)
library(dplyr)
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
shiny::runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
shiny::runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
enddate  <- input$enddate+1
heatdata <- trips_db  %>%
barsdata <- trips_db  %>%
filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = hour(tpep_dropoff_datetime),Day= day(tpep_dropoff_datetime)) %>% show_query()
trips_db  %>%
mutate(Hour_Range = hour(tpep_dropoff_datetime),Day= day(tpep_dropoff_datetime)) %>% show_query()
trips_db  %>%
mutate(Hour_Range = DatePart("hh",tpep_dropoff_datetime),Day= DatePart("d",tpep_dropoff_datetime)) %>% show_query()
trips_db  %>%
mutate(Hour_Range = DatePart("hh",tpep_dropoff_datetime),Day= DatePart("dw",tpep_dropoff_datetime))
trips_db  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>% show_query()
trips_db  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime))
trips_db  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>% select(Day,Hour_Range)
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(tip_amount)
heatdata <- trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount))
heatdata
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range =
case_when(Hour_Range >=  1 & Hour_Range <= 4 ~ "1AM-5AM"),
TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range =
case_when(Hour_Range >=  1 && Hour_Range <= 4 ~ "1AM-5AM"),
TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range_X =
case_when(Hour_Range >=  1 && Hour_Range <= 4 ~ "1AM-5AM"),
TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range_X =
case_when(Hour_Range >=  1 ~ "1AM-5AM"),
TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range_X =
case_when(Hour_Range >  1 ~ "1AM-5AM"),
TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range_X =case_when(Hour_Range >  1 ~ "1AM-5AM"),TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range_X = case_when(Hour_Range >  1 ~ "1AM-5AM"),TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range = DatePart(hh,tpep_dropoff_datetime),Day= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range,Day) %>%
summarise(Avg_Tip = mean(tip_amount))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range_Raw = DatePart(hh,tpep_dropoff_datetime),Day_Raw= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range_Raw,Day_Raw) %>%
summarise(Avg_Tip = mean(tip_amount))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range_Raw = DatePart(hh,tpep_dropoff_datetime),Day_Raw= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range_Raw,Day_Raw) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range = case_when(Hour_Range_Raw ==  1 ~ "1AM-5AM"))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range_Raw = DatePart(hh,tpep_dropoff_datetime),Day_Raw= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range_Raw,Day_Raw) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range = case_when(Hour_Range_Raw ==  20 ~ "1AM-5AM"),TRUE ~ as.character(Hour_Range))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range_Raw = DatePart(hh,tpep_dropoff_datetime),Day_Raw= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range_Raw,Day_Raw) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range = case_when(Hour_Range_Raw ==  20 ~ "1AM-5AM"),TRUE ~ as.character(Hour_Range_Raw))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range_Raw = DatePart(hh,tpep_dropoff_datetime),Day_Raw= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range_Raw,Day_Raw) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range = case_when(Hour_Range_Raw ==  20 ~ "1AM-5AM"))#,TRUE ~ as.character(Hour_Range_Raw))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range_Raw = DatePart(hh,tpep_dropoff_datetime),Day_Raw= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range_Raw,Day_Raw) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range = case_when(Hour_Range_Raw >= 1 & Hour_Range_Raw <= 4 ~ "1AM-5AM"))#,TRUE ~ as.character(Hour_Range_Raw))
trips_db  %>%
# filter(tpep_dropoff_datetime >= input$startdate,tpep_dropoff_datetime < enddate,
#        trip_distance >= input$trip_distance[1],trip_distance <= input$trip_distance[2])  %>%
mutate(Hour_Range_Raw = DatePart(hh,tpep_dropoff_datetime),Day_Raw= DatePart(dw,tpep_dropoff_datetime)) %>%
group_by(Hour_Range_Raw,Day_Raw) %>%
summarise(Avg_Tip = mean(tip_amount)) %>%
mutate(Hour_Range = case_when(Hour_Range_Raw >= 1 & Hour_Range_Raw <= 4 ~ "1AM-5AM",
Hour_Range_Raw >= 5 & Hour_Range_Raw <= 8 ~ "5AM-9AM",
Hour_Range_Raw >= 9 & Hour_Range_Raw <= 11 ~ "9AM-12PM",
Hour_Range_Raw >= 12 & Hour_Range_Raw <= 15 ~ "12PM-4PM",
Hour_Range_Raw >= 16 & Hour_Range_Raw <= 17 ~ "4PM-6PM",
Hour_Range_Raw >= 18 & Hour_Range_Raw <= 21 ~ "6PM-10PM",
Hour_Range_Raw >= 22 | Hour_Range_Raw < 1 ~ "10PM-1AM"
)
)
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
url <- "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-06.csv"
download.file(url,"D:/Cab_Data/yellow_tripdata_2018-06.csv")
url <- "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-07.csv"
download.file(url,"D:/Cab_Data/yellow_tripdata_2018-07.csv")
url <- "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-08.csv"
download.file(url,"D:/Cab_Data/yellow_tripdata_2018-08.csv")
url <- "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-09.csv"
download.file(url,"D:/Cab_Data/yellow_tripdata_2018-09.csv")
url <- "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-10.csv"
download.file(url,"D:/Cab_Data/yellow_tripdata_2018-10.csv")
url <- "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-11.csv"
download.file(url,"D:/Cab_Data/yellow_tripdata_2018-11.csv")
url <- "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-12.csv"
download.file(url,"D:/Cab_Data/yellow_tripdata_2018-12.csv")
runApp('R_UG_Demo/Cab_Explorer')
shiny::runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
shiny::runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
runApp('R_UG_Demo/Cab_Explorer')
shiny::runApp()
runApp('~/R_UG_Demo/01-SQL_SAT_Presentation')
runApp('~/CPU_Dashboard')
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
)
)
fluidPage(
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
titlePanel("Old Faithful Geyser Data")
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(DBI)
library(rodbc)
library(odbc)
library(shiny)
library(DBI)
library(odbc)
mydriver <-  "SQL Server"
myserver <- '.\\snapman'
myDatabase <- 'Cab_Demo'
pool <- dbConnect(Driver = mydriver,Server = myserver,Database = 'Test' ,Trusted_Connection='yes')
pool <- dbConnect(drv = odbc(),  Driver = mydriver,Server = myserver,Database = 'Test' ,Trusted_Connection='yes')
library(shiny)
library(DBI)
library(odbc)
con <- dbConnect(drv = odbc(),  Driver = 'Sql Server',Server = '.\\snapman',Database = 'Test' ,Trusted_Connection='yes')
my_ui <- fluidPage()
my_server <- function(input, output) {}
shinyApp(ui = my_ui, server = my_server)
256/60
library(shiny)
library(DBI)
library(odbc)
con <- dbConnect(drv = odbc(),  Driver = 'Sql Server',Server = '.\\snapman',Database = 'Test' ,Trusted_Connection='yes')
my_ui <- fluidPage(sliderInput("cpu_slider","Minutes Back",0,256,256))
my_server <- function(input, output) {}
shinyApp(ui = my_ui, server = my_server)
library(shiny)
my_ui <- fluidPage(sidebarPanel(sliderInput("cpu_slider","Minutes Back",0,256,256)))
my_server <- function(input, output) {}
shinyApp(ui = my_ui, server = my_server)
library(shiny)
my_ui <- fluidPage(sidebarPanel(sliderInput("cpu_slider","Minutes Back",0,256,256)),
plotOutput('cpu_plot')
)
my_server <- function(input, output) {}
shinyApp(ui = my_ui, server = my_server)
